#!/bin/sh

### BEGIN INIT INFO
# Provides:          vertx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts vert.x modules
# Description:       starts vert.x modules using start-stop-daemon
### END INIT INFO

. /etc/default/vertx

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=$VERTX_HOME/bin/vertx
VERTICLE=$2
SERVICENAME=$( echo $2 | cut -d '~' -f 1,2)
INSTANCES=$3
DAEMON_OPTS=" -instances 2 -cluster $"
PIDDIR=/var/run/vertx
PIDFILE=$PIDDIR/$VERTICLE.pid

set -e

. /lib/lsb/init-functions
if [ ! -d "$PIDDIR" ]; then
  mkdir $PIDDIR
  chown $VERTX_USER:$VERTX_USER $PIDDIR
fi

if [ ! -d /var/log/vertx ]; then
    mkdir /var/log/vertx
    chown $VERTX_USER:$VERTX_USER /var/log/vertx
fi

if [ ! -d /var/run/vertx ]; then
    mkdir /var/run/vertx
    chown $VERTX_USER:$VERTX_USER /var/run/vertx
fi

start_modules () {
     for i in $( ls $VERTX_HOME/mods ); do
        VERTICLE=$i
        PIDFILE=$PIDDIR/$VERTICLE.pid
        SERVICENAME=$( echo $i | cut -d '~' -f 1,2)
        start_module $PIDFILE
     done
}

stop_modules () {
    for i in $( ls $VERTX_HOME/mods ); do
        VERTICLE=$i
        PIDFILE=$PIDDIR/$VERTICLE.pid
        SERVICENAME=$( echo $i | cut -d '~' -f 1,2)
        stop_module $PIDFILE
    done
}


start_module () {

    if [ -f $1 ]; then
		PID=$(cat $1)
        log_daemon_msg "Module $VERTICLE allready running on pid $PID."
        log_end_msg 1
		exit 2
	fi

	LIST=$(ls -l $VERTX_HOME/mods|grep $SERVICENAME |wc -l)
	if [ "$LIST" -gt "0" ]; then
		OTHER=$(ls $VERTX_HOME/mods | grep $SERVICENAME)
		if [ $OTHER != $VERTICLE ]; then
			log_daemon_msg "Other version of service allready running, remove it first : $OTHER"
			log_end_msg 1
			exit 3
		fi
	fi
	    log_daemon_msg "Starting $VERTICLE."
        start-stop-daemon --user $VERTX_USER -c $VERTX_USER:$VERTX_USER --umask 0000 --chdir $VERTX_HOME --start --background --make-pidfile --pidfile $1 --exec $DAEMON  -- runmod $VERTICLE $DAEMON_OPTS || true
        log_end_msg 0
}

stop_module () {
    log_daemon_msg "Stopping $VERTICLE"
    if [ -f $1 ]; then
        PID=$(cat $1)
        start-stop-daemon --user $VERTX_USER --oknodo --quiet --retry TERM/10/KILL/20 --stop --pidfile $1
        rm $1
        sleep 5
        if kill -0 $PID >/dev/null 2>&1; then
            kill -9 $PID >/dev/null 2>&1
        fi
    fi
}

install_module () {
        start-stop-daemon --user $VERTX_USER  -c $VERTX_USER:$VERTX_USER --start --umask 0000 --chdir $VERTX_HOME --exec $DAEMON -- install $VERTICLE || true
}

uninstall_module () {
        start-stop-daemon --user $VERTX_USER  -c $VERTX_USER:$VERTX_USER --start --umask 0000 --chdir $VERTX_HOME --exec $DAEMON -- uninstall $VERTICLE || true
}


case "$1" in
    install)
        install_module
        ;;
    remove)
        uninstall_module
        ;;
    start)
        start_modules
        ;;
    stop)
        stop_modules
        ;;
	start-module)
		start_module $PIDFILE
		;;
	stop-module)

		stop_module $PIDFILE
		;;
	*)
		log_daemon_msg "Usage: $NAME {start|stop|start-module|stop-module}"
		log_end_msg 0
		;;
esac