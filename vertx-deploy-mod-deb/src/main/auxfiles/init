#!/bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts vert.x module
# Description:       starts vert.x module using start-stop-daemon
### END INIT INFO

. /etc/default/vertx

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=$VERTX_HOME/bin/vertx
VERTICLE=$2
SERVICENAME=$( echo $2 | cut -d '~' -f 1,2)
INSTANCES=$3
DAEMON_OPTS="runmod $VERTICLE -instances 1 -cluster $"
PIDDIR=/var/run/vertx
PIDFILE=$PIDDIR/$VERTICLE.pid

set -e

. /lib/lsb/init-functions
if [ ! -d "$PIDDIR" ]; then
  mkdir $PIDDIR
  chown $VERTX_USER:$VERTX_USER $PIDDIR
fi

if [ ! -d "/var/log/vertx"]; then
    mkdir /var/log/vertx
    chown $VERTX_USER:$VERTX_USER /var/log/vertx
fi

if [ ! -d "/var/run/vertx"]; then
    mkdir /var/run/vertx
    chown $VERTX_USER:$VERTX_USER /var/run/vertx
fi

if [ ! -d "$VERTX_HOME/mods/$VERTICLE" ]; then
   log_daemon_msg "Verticle $VERTICLE not installed!"
   log_end_msg 1
   exit 1
fi


start_module () {

    if [ -f $PIDFILE ]; then
		PID=$(cat $PIDFILE)
        log_daemon_msg "Module $DESC allready running on pid $PID."
        log_end_msg 1
		exit 2
	fi
	LIST=$(ls -l /opt/vert.x/mods|grep $SERVICENAME |wc -l)
	if [ "$LIST" -gt "0" ]; then
		OTHER=$(ls /opt/vert.x/mods | grep $SERVICENAME)
		if [ $OTHER != $VERTICLE ]; then
			log_daemon_msg "Other version of service allready running, remove it first : $OTHER"
			log_end_msg 1
			exit 3
		fi
	fi
        start-stop-daemon --user $VERTX_USER -c $VERTX_USER:$VERTX_USER --umask 0000 --chdir $VERTX_HOME --start --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON  -- $DAEMON_OPTS || true
}

stop_module () {

        if [ -f $1 ]; then
    		if [ ! $(kill $(cat $1) > /dev/null 2>&1) ]; then
			log_daemon_msg "Kill process for ${PIDFILE}"
		else
			kill $(cat $1)
		fi
	        rm  $1
	else

		log_end_msg 0
		exit 0
	fi
}

bootstrap_container () {
    DEPLOY_MOD="nl.jpoint.vertx-deploy-tools~vertx-deploy-mod~1.0.0-SNAPSHOT"
    PIDFILE=$PIDDIR/$DEPLOY_MOD.pid
	if [ -f $PIDFILE ]; then
	        stop_module $PIDFILE
	fi
    rm -rf /opt/vert.x/sys-mods/$DEPLOY_MOD
    su $VERTX_USER -c "$DAEMON install $DEPLOY_MOD"
	BOOTSTRAP_OPTS="runmod $DEPLOY_MOD -instances 1 -conf /etc/vertx/deploy.json"
    start-stop-daemon --user $VERTX_USER -c $VERTX_USER:$VERTX_USER --chuid $VERTX_USER --umask 0000 --chdir $VERTX_HOME --start --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON  -- $BOOTSTRAP_OPTS || true
}

start_mod () {
        DEPLOY_MOD="nl.jpoint.vertx-deploy-tools~vertx-deploy-mod~1.0.0-SNAPSHOT"
        PIDFILE=$PIDDIR/$DEPLOY_MOD.pid
	if [ -f $PIDFILE ]; then
	        stop_module $PIDFILE
	fi
	BOOTSTRAP_OPTS="runmod $DEPLOY_MOD -instances 1 -conf /etc/vertx/deploy.json"
    start-stop-daemon --user $VERTX_USER -c $VERTX_USER:$VERTX_USER --chuid $VERTX_USER --umask 0000 --chdir $VERTX_HOME --start --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON  -- $BOOTSTRAP_OPTS || true
}


case "$1" in
	start)
		log_daemon_msg "Starting $2."
		start_module
		log_end_msg 0
		;;

	stop)
		log_daemon_msg "Stopping $2"
		stop_module $PIDFILE
		log_end_msg 0
		;;
	bootstrap)
		log_daemon_msg "Bootstrapping Vert.x container"
		bootstrap_container $2
		log_end_msg 0
		;;
	init)
	    log_daemon_msg "Starting Vert.x deploy Mod"
	    start_mod $2
	    log_end_msg 0
        ;;
	*)
		log_daemon_msg "Usage: $NAME {start|stop|init|bootstrap}"
		log_end_msg 0
		;;
esac
